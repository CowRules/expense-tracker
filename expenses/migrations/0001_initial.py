# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-18 20:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('desc', models.CharField(max_length=256)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BalanceAmountCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('date', models.DateField()),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceSyncEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='ChainedBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.IntegerField(default=0)),
                ('master_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_balance', to='expenses.Balance')),
                ('slave_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slave_balance', to='expenses.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='ChainedSubtransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ChainedSubtransactionIgnored',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chained_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.ChainedBalance')),
            ],
        ),
        migrations.CreateModel(
            name='ChainedSubtransactionPendingChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chained', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.ChainedSubtransaction')),
                ('slave_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChainedSubtransactionPendingNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chained_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.ChainedBalance')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_relation_friend', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_relation_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_request_friend', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_request_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('desc', models.CharField(max_length=256)),
                ('priority', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PresetSubTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fraction', models.FloatField(default=1)),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Balance')),
                ('preset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Preset')),
            ],
        ),
        migrations.CreateModel(
            name='PresetTransactionTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Preset')),
            ],
        ),
        migrations.CreateModel(
            name='Subtransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Balance')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('desc', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.CharField(max_length=256)),
                ('date_time', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Tag')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Transaction')),
            ],
        ),
        migrations.AddField(
            model_name='subtransaction',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Transaction'),
        ),
        migrations.AddField(
            model_name='presettransactiontag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Tag'),
        ),
        migrations.AddField(
            model_name='chainedsubtransactionpendingnew',
            name='master_subtransaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Subtransaction'),
        ),
        migrations.AddField(
            model_name='chainedsubtransactionpendingnew',
            name='slave_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chainedsubtransactionignored',
            name='master_subtransaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Subtransaction'),
        ),
        migrations.AddField(
            model_name='chainedsubtransactionignored',
            name='slave_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chainedsubtransaction',
            name='master_subtransaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_subtransaction', to='expenses.Subtransaction'),
        ),
        migrations.AddField(
            model_name='chainedsubtransaction',
            name='slave_subtransaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slave_subransaction', to='expenses.Subtransaction'),
        ),
        migrations.AddField(
            model_name='balancesyncevent',
            name='subtransaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.Subtransaction'),
        ),
    ]
